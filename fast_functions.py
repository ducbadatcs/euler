import math
import numpy as np
   source = [
    "def fast_miller_rabin(n: int) -> bool:\n",
    "    if n < 2:\n",
    "        return False\n",
    "    bases = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]\n",
    "    # phi_bases = [1, 240, 5000, 13824, 311040, 3260160, 598421672]\n",
    "    d = n - 1\n",
    "    s = 0\n",
    "    while d % 2 == 0:\n",
    "        d //= 2\n",
    "        s += 1\n",
    "    for i in bases:\n",
    "        if n == i:\n",
    "            return True\n",
    "        elif n % i == 0:\n",
    "            return False\n",
    "        # reduce modulo \n",
    "        a = i\n",
    "        x = pow(a, d, n)\n",
    "        for _ in range(s):\n",
    "            y = pow(x, 2, n)\n",
    "            if y == 1 and x != 1 and x != n - 1:\n",
    "                return False\n",
    "            x = y\n",
    "        if y != 1:\n",
    "            return False\n",
    "    return True\n",
    "\n",
    "for i in range(1, 65):\n",
    "    if fast_miller_rabin(2 ** i + i):\n",
    "        print(i)"
   ]
